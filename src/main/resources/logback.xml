<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="LOGS" value="/appdata/indianbank/logs" />  
     <!-- <property name="LOGS" value="/home/kothaai/appdata/indianbank/logs" />  -->
    <appender name="STDOUT"
        class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
               %d{yyyy-MM-dd HH:mm:ss} [%X{uniqueId}] %-5level %logger{0}.%M \(%L\) - %msg%n%rEx{full,
          java.lang.reflect.Method,
          org.apache.catalina,
          org.springframework.aop,
          org.springframework.security,
          org.springframework.transaction,
          org.springframework.web,
          org.glassfish.jersey,
          sun.reflect,
          org.jboss.as.web,
          org.apache.coyote,
          org.apache.tomcat,
          net.sf.cglib,
          java.net,
          sun.net
        }
            </Pattern>
        </layout>
    </appender>
    <appender name="FILE-ACCESS"
        class="ch.qos.logback.core.rolling.RollingFileAppender" value="false">
        <file>${LOGS}/indianbankaccesscore.log</file>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator">
                <expression>
                    e.level.toInt() &lt;= ERROR.toInt()
                </expression>
            </evaluator>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>NEUTRAL</OnMatch>
        </filter>
        <encoder
            class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
             <Pattern>
               %d{yyyy-MM-dd HH:mm:ss} [%X{uniqueId} -%X{hmacValue}] %-5level %logger{0}.%M \(%L\) - %msg%n%rEx{full,
          java.lang.reflect.Method,
          org.apache.catalina,
          org.springframework.aop,
          org.springframework.security,
          org.springframework.transaction,
          org.springframework.web,
          org.glassfish.jersey,
          sun.reflect,
          org.jboss.as.web,
          org.apache.coyote,
          org.apache.tomcat,
          net.sf.cglib,
          java.net,
          sun.net
        }
            </Pattern>
        </encoder>
        <rollingPolicy
            class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
               <fileNamePattern>${LOGS}/archived/indianbankaccesscore.%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
              <maxFileSize>1MB</maxFileSize>
              <TimeBasedFileNamingAndTriggeringPolicy class="com.indianbank.cbs.logger.RollOnStartupAndSizeTriggeringPolicy">
              </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
     <appender name="FILE-OUTPUT"
        class="ch.qos.logback.core.rolling.RollingFileAppender" value="false">
        <file>${LOGS}/brigadeportaloutput.log</file>
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
            <evaluator class="ch.qos.logback.classic.boolex.GEventEvaluator">
                <expression>
                    e.level.toInt() &lt;= ERROR.toInt()
                </expression>
            </evaluator>
            <OnMismatch>DENY</OnMismatch>
            <OnMatch>NEUTRAL</OnMatch>
        </filter>
        <encoder
            class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
             <Pattern>
               %d{yyyy-MM-dd HH:mm:ss} [%X{uniqueId} -%X{hmacValue}] %-5level %logger{0}.%M \(%L\) - %msg%n%rEx{full,
          java.lang.reflect.Method,
          org.apache.catalina,
          org.springframework.aop,
          org.springframework.security,
          org.springframework.transaction,
          org.springframework.web,
          org.glassfish.jersey,
          sun.reflect,
          org.jboss.as.web,
          org.apache.coyote,
          org.apache.tomcat,
          net.sf.cglib,
          java.net,
          sun.net
        }
            </Pattern>
        </encoder>
        <rollingPolicy
            class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily and when the file reaches 10 MegaBytes -->
               <fileNamePattern>${LOGS}/archived/indianbankoutput.%d{yyyy-MM-dd-HH}.%i.log</fileNamePattern>
              <maxFileSize>1MB</maxFileSize>
              <TimeBasedFileNamingAndTriggeringPolicy class="com.indianbank.cbs.logger.RollOnStartupAndSizeTriggeringPolicy">
              </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <appender name="FILE-ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender" value="false">
		<file>${DEV_HOME}/indianbankerror.log</file>
		To print error log files alone
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>
					%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{uniqueId}-%X{hmacValue}-%X{bankId}] %-5level	%logger{0}.%M \(%L\) - %msg%n%rEx{full,
          java.lang.reflect.Method,
          org.apache.catalina,
          org.springframework.aop,
          org.springframework.security,
          org.springframework.transaction,
          org.springframework.web,
          org.glassfish.jersey,
          sun.reflect,
          org.jboss.as.web,
          org.apache.coyote,
          org.apache.tomcat,
          net.sf.cglib,
          java.net,
          sun.net
        }
			</Pattern>
		</encoder>
	<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
		<!-- rollover daily -->
		<fileNamePattern>${DEV_HOME}/archived/indianbankerror.%d{yyyy-MM-dd-HH}.%i.log
		</fileNamePattern>
		<maxFileSize>10MB</maxFileSize>
	</rollingPolicy>
	</appender>
	
	
	
    <!-- LOG everything at INFO level -->
   <!--  <root level="info">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="STDOUT" />
    </root>
    <logger name="com.indianbank" level="trace" additivity="false">
        <appender-ref ref="RollingFile" />
        <appender-ref ref="STDOUT" />
    </logger> -->
    <logger name="com.indianbank.cbs" level="${log.level}"
		additivity="true">
		<appender-ref ref="FILE-OUTPUT" />
		<appender-ref ref="STDOUT" />
	</logger>
	
	<logger name="com.indianbank.cbs.filter" level="trace" additivity="false">
		<appender-ref ref="FILE-ACCESS" />
	</logger>
	<logger name="com.indianbank.cbs.interceptor" level="trace" additivity="false">
		<appender-ref ref="FILE-ACCESS" />
	</logger>
	<root level="error">
		<appender-ref ref="FILE-ERROR" />
	</root>
	<logger name="org.springframework" level="error" additivity="false">
		
	</logger>
</configuration>